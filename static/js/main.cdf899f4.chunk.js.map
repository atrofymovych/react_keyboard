{"version":3,"sources":["components/App/App.tsx","index.tsx"],"names":["App","state","currentKey","handleKeyboardClick","event","setState","key","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAQaA,EAAb,4MACEC,MAAe,CACbC,WAAY,IAFhB,EAaEC,oBAAsB,SAACC,GACrB,EAAKC,SAAS,CAAEH,WAAYE,EAAME,OAdtC,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,uBAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,uBAV/C,oBAiBE,WACE,IAAQD,EAAeO,KAAKR,MAApBC,WAER,OACE,sBAAKS,UAAU,MAAf,WACIT,GACG,mBAAGS,UAAU,eAAb,qCACJT,GACI,mBAAGS,UAAU,eAAb,2CAAwDT,YAzBrE,GAAyBU,IAAMC,W,MCH/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.cdf899f4.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  currentKey: string\n};\n\ntype Props = {};\n\nexport class App extends React.Component<Props, State> {\n  state: State = {\n    currentKey: '',\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.handleKeyboardClick);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.handleKeyboardClick);\n  }\n\n  handleKeyboardClick = (event: KeyboardEvent) => {\n    this.setState({ currentKey: event.key });\n  };\n\n  render() {\n    const { currentKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        {!currentKey\n          && <p className=\"App__message\">Nothing was pressed yet</p>}\n        {currentKey\n          && <p className=\"App__message\">{`The last pressed key is ${currentKey}`}</p>}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './components/App/App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}